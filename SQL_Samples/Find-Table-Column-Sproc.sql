/*This finds column and table names*/
USE [some_db]
GO

--Find Tables
SELECT
t.name AS TableName
,c.name AS ColumnName
FROM
	sys.columns c
JOIN
	sys.tables t
	ON c.object_id = t.object_id
WHERE 1=1
	AND t.name LIKE '%some_table%'
	--AND C.name LIKE '%some_column%'
ORDER BY 1

--Find Columns

SELECT  
       tableName
     , columnName
  FROM syCode
 WHERE 1=1
   --AND tableName LIKE '%some_table%'
   AND columnName LIKE '%some_column%'

--This one looks at objects so it will catch views

DECLARE @SearchString VARCHAR(MAX) = '%some_string%'

SELECT
	   t.name AS TableName
	 , c.name AS ColumnName
  FROM sys.columns c WITH (NOLOCK)
  JOIN sys.tables t WITH (NOLOCK)
	ON c.object_id = t.object_id
 WHERE 1=1
   AND t.name LIKE @SearchString
	OR c.name LIKE @SearchString
ORDER BY 1

SELECT [name] FROM sysobjects where id in (
SELECT id FROM syscolumns where name like @SearchString)  

/*Tells you the data type of the column*/
USE [some_db]
GO

SELECT * 
  FROM information_Schema.columns WITH (NOLOCK)
 WHERE 1=1
   AND table_name LIKE 'Some_Table' 
   AND column_name LIKE '%Some_Column%' 

/*Tells you the primary and foreign keys of a table*/
USE [some_db]
GO

SELECT 
	   INFORMATION_SCHEMA.TABLE_CONSTRAINTS.* --CONSTRAINT_TYPE
	 , INFORMATION_SCHEMA.KEY_COLUMN_USAGE.*
  FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WITH (NOLOCK)
  JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE WITH (NOLOCK)
    ON INFORMATION_SCHEMA.TABLE_CONSTRAINTS.TABLE_NAME = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_NAME
   AND INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_CATALOG = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_CATALOG
   AND INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA
   AND INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_NAME =	INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_NAME
 WHERE 1=1
   AND INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_NAME LIKE 'Some_Table' 

/*This tells you all columns of a table AND which columns are primary or foreign keys*/
USE [some_db]
GO

DECLARE @TableName VARCHAR(40) = 'Some_Table'
SELECT DISTINCT
  INFORMATION_SCHEMA.COLUMNS.TABLE_CATALOG
, INFORMATION_SCHEMA.COLUMNS.TABLE_SCHEMA
, INFORMATION_SCHEMA.COLUMNS.TABLE_NAME
, INFORMATION_SCHEMA.COLUMNS.COLUMN_NAME
, ISNULL(INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_TYPE,'') AS CONSTRAINT_TYPE
, ISNULL(INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_NAME,'') AS CONSTRAINT_NAME
, INFORMATION_SCHEMA.COLUMNS.ORDINAL_POSITION
, INFORMATION_SCHEMA.COLUMNS.COLUMN_DEFAULT
, INFORMATION_SCHEMA.COLUMNS.IS_NULLABLE
, INFORMATION_SCHEMA.COLUMNS.DATA_TYPE
, INFORMATION_SCHEMA.COLUMNS.CHARACTER_MAXIMUM_LENGTH
, INFORMATION_SCHEMA.COLUMNS.CHARACTER_OCTET_LENGTH
, INFORMATION_SCHEMA.COLUMNS.NUMERIC_PRECISION
, INFORMATION_SCHEMA.COLUMNS.NUMERIC_PRECISION_RADIX
, INFORMATION_SCHEMA.COLUMNS.NUMERIC_SCALE
, INFORMATION_SCHEMA.COLUMNS.DATETIME_PRECISION
FROM INFORMATION_SCHEMA.COLUMNS WITH (NOLOCK)
LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE WITH (NOLOCK)
  ON INFORMATION_SCHEMA.COLUMNS.TABLE_CATALOG = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_CATALOG
 AND INFORMATION_SCHEMA.COLUMNS.TABLE_SCHEMA = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_SCHEMA
 AND INFORMATION_SCHEMA.COLUMNS.TABLE_NAME = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_NAME
 AND INFORMATION_SCHEMA.COLUMNS.COLUMN_NAME = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.COLUMN_NAME
LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS WITH (NOLOCK)
  ON INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_CATALOG = INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_CATALOG
 AND INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_NAME = INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_NAME
 AND INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA = INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
 WHERE 1=1
   AND INFORMATION_SCHEMA.COLUMNS.TABLE_NAME LIKE @TableName
ORDER BY INFORMATION_SCHEMA.COLUMNS.ORDINAL_POSITION
;

/*This tells you all columns of a table AND which columns are primary or foreign keys*/
USE [some_db]
GO

DECLARE @TableName VARCHAR(40) = 'Some_Table'
SELECT DISTINCT
  INFORMATION_SCHEMA.COLUMNS.TABLE_CATALOG
, INFORMATION_SCHEMA.COLUMNS.TABLE_SCHEMA
, INFORMATION_SCHEMA.COLUMNS.TABLE_NAME
, INFORMATION_SCHEMA.COLUMNS.COLUMN_NAME
, ISNULL(INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_TYPE,'') AS CONSTRAINT_TYPE
, ISNULL(INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_NAME,'') AS CONSTRAINT_NAME
, INFORMATION_SCHEMA.COLUMNS.ORDINAL_POSITION
, INFORMATION_SCHEMA.COLUMNS.COLUMN_DEFAULT
, INFORMATION_SCHEMA.COLUMNS.IS_NULLABLE
, INFORMATION_SCHEMA.COLUMNS.DATA_TYPE
, INFORMATION_SCHEMA.COLUMNS.CHARACTER_MAXIMUM_LENGTH
, INFORMATION_SCHEMA.COLUMNS.CHARACTER_OCTET_LENGTH
, INFORMATION_SCHEMA.COLUMNS.NUMERIC_PRECISION
, INFORMATION_SCHEMA.COLUMNS.NUMERIC_PRECISION_RADIX
, INFORMATION_SCHEMA.COLUMNS.NUMERIC_SCALE
, INFORMATION_SCHEMA.COLUMNS.DATETIME_PRECISION
FROM INFORMATION_SCHEMA.COLUMNS WITH (NOLOCK)
LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE WITH (NOLOCK)
  ON INFORMATION_SCHEMA.COLUMNS.TABLE_CATALOG = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_CATALOG
 AND INFORMATION_SCHEMA.COLUMNS.TABLE_SCHEMA = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_SCHEMA
 AND INFORMATION_SCHEMA.COLUMNS.TABLE_NAME = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_NAME
 AND INFORMATION_SCHEMA.COLUMNS.COLUMN_NAME = INFORMATION_SCHEMA.KEY_COLUMN_USAGE.COLUMN_NAME
LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS WITH (NOLOCK)
  ON INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_CATALOG = INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_CATALOG
 AND INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_NAME = INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_NAME
 AND INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA = INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
 WHERE 1=1
   AND INFORMATION_SCHEMA.COLUMNS.TABLE_NAME LIKE @TableName
ORDER BY INFORMATION_SCHEMA.COLUMNS.ORDINAL_POSITION;


/*This finds sprocs in jobs*/
SELECT j.job_id
     , s.srvname
     , j.name
     , js.step_id
     , js.command
     , j.enabled 
  FROM dbo.sysjobs j
  JOIN dbo.sysjobsteps js
    ON js.job_id = j.job_id 
  JOIN master.dbo.sysservers s
    ON s.srvid = j.originating_server_id
 WHERE 1=1
   AND js.command LIKE N'%CRM%'
   AND enabled = 1
   